Often, a disproportionately large component of research involves dealing with
various image datatypes, color representations, and file formation
conversion. scikit-image offers robust tools for converting between image
datatypes ([DirectX]_, [OpenGL]_, [GraphicsGemsI]_) and to do file input/output
(I/O) operations.  Our purpose is to allow investigators to focus their time on
research, instead of expending effort on mundane administrative tasks.

The package includes a number of algorithms with broad applications across
image processing research, from computer vision to medical image analysis. We
refer the reader to the current API documentation for a full listing of current
capabilities [APIdocs]_.

Here, we consider the analysis of a large stack of images, each representing
drying droplets containing nanoparticles (see Figure :ref:`cracks`). As the drying proceeds,
cracks propagate from the edge of the drop to its center. The aim is to understand
crack patterns by collecting statistical information about their positions,
as well as their time and order of appearance. To improve the speed at which
data is processed,
each experiment, constituting an image stack, is automatically analysed without
human intervention. The contact line is detected by a circular Hough transform
(``transform.hough_circle``) providing the drop radius and its center. Then, a
second circle with a radius of a fraction of the droplet size is drawn to
collect its pixels. Repeating the process on each image in the stack, collected
pixels can be assembled to make a space-time diagram. As a result, a complex
stack of images is reduced to a single image summarizing the dynamic
underlying process.


.. figure:: fig_cracks.pdf
   :scale: 60%
   :figclass: bht

   Scikit-image is used to track the propagation of cracks (black lines)
   in a drying colloidal droplet. The sequence of pictures shows the temporal
   evolution of the system with, in green, the drop contact line detected by the
   Hough transform and, in white, the circle used to reslice the image stack.
   The shown result illustrates the angular position of cracks and
   their time of appearance. :label:`cracks`

References
----------
.. [DirectX] http://msdn.microsoft.com/en-us/library/windows/desktop/dd607323%28v=vs.85%29.aspx
.. [OpenGL] https://www.khronos.org/registry/gles/specs/2.0/es_full_spec_2.0.25.pdf
.. [GraphicsGemsI] Paeth, Alan W., Proper Treatment of Pixels as Integers, p. 249-256, code: p. 719
.. [APIdocs] http://scikit-image.org/docs/dev/
